name: Publish Version

on:
  workflow_call:
    inputs:
      simulate:
        required: false
        type: boolean
      branch:
        description: 'Branch to checkout; main or dev'
        required: true
        type: string
      tag-name:
        description: 'Tag to upload to'
        required: true
        type: string
      release-body:
        description: 'Body for published release notes'
        required: false
        type: string
      changelog-body:
        description: 'Body of change notes to insert into CHANGELOG.md'
        required: false
        type: string

jobs:
  build:
    name: Build and Publish to Maven
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CI: 'true'
    outputs:
      ver: ${{ steps.ver.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - name: Setup Build
        uses: ./.github/actions/build_setup
        with:
          ref: ${{ inputs.branch }}
      - name: Get Version
        id: ver
        run: echo "version=$(./gradlew -q printVersion)" >> $GITHUB_OUTPUT
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build
        run: ./gradlew assemble
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ inputs.branch }}
          path: build/libs/*
          if-no-files-found: error
          retention-days: 3
      - name: Publish
        if: ${{ !inputs.simulate }}
        env:
          MAVEN_USER: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        run: ./gradlew publish

  upload-release-artifacts:
    name: Upload Artifacts
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ inputs.branch }}
      - name: Upload artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag-name }}
          files: ./*.jar
          fail_on_unmatched_files: true

  # After successful release, PR version bump and changelog
  bump-version-and-changelog:
    name: Bump Version and Build Changelog
    needs: [ build, upload-release-artifacts ]
    if: ${{ always() && !failure() && !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
      - name: Bump Version
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git switch -C gh/release-${{ inputs.branch }}
          BUMPED=$(echo ${{ needs.build.outputs.ver }} | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.)
          sed -i "s/= ${{ needs.build.outputs.ver }}/= ${BUMPED}/" gradle.properties
          git commit -am "Bump version to ${BUMPED}"
      - name: Prepend to CHANGELOG
        if: inputs.changelog-body
        run: |
          { head -n 2 CHANGELOG.md; echo -e "${{ inputs.changelog-body }}"; tail -n +3 CHANGELOG.md; } > temp.md && mv temp.md CHANGELOG.md
          git commit -am "Updated CHANGELOG"
      - name: Push and PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          git push --force --set-upstream origin gh/release-${{ inputs.branch }}
          gh pr create -B ${{ inputs.branch }} -H gh/release-${{ inputs.branch }} --title "RELEASE for ${{ inputs.branch }} [no-snapshot]" --body "Created by GH Workflow" --label "ignore changelog"
